[{"/home/amit/Documents/PubLab/src/index.js":"1","/home/amit/Documents/PubLab/src/App.js":"2","/home/amit/Documents/PubLab/src/reportWebVitals.js":"3","/home/amit/Documents/PubLab/src/components/AddPatient.js":"4","/home/amit/Documents/PubLab/src/components/Login.js":"5","/home/amit/Documents/PubLab/src/components/PatientInex.js":"6","/home/amit/Documents/PubLab/src/components/SelectUser.js":"7","/home/amit/Documents/PubLab/src/view/PatientCard.jsx":"8","/home/amit/Documents/PubLab/src/firebase/firebase.js":"9","/home/amit/Documents/PubLab/src/config/config.js":"10","/home/amit/Documents/PubLab/src/firebase/context.js":"11","/home/amit/Documents/PubLab/src/components/AddUser.js":"12"},{"size":500,"mtime":1610188106998,"results":"13","hashOfConfig":"14"},{"size":979,"mtime":1610212457990,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610188106998,"results":"16","hashOfConfig":"14"},{"size":2072,"mtime":1610188426440,"results":"17","hashOfConfig":"14"},{"size":3006,"mtime":1610208976076,"results":"18","hashOfConfig":"14"},{"size":550,"mtime":1610195145314,"results":"19","hashOfConfig":"14"},{"size":1614,"mtime":1610188106998,"results":"20","hashOfConfig":"14"},{"size":3267,"mtime":1610188106998,"results":"21","hashOfConfig":"14"},{"size":1440,"mtime":1610212820722,"results":"22","hashOfConfig":"14"},{"size":330,"mtime":1610188426440,"results":"23","hashOfConfig":"14"},{"size":111,"mtime":1610211812578,"results":"24","hashOfConfig":"14"},{"size":4921,"mtime":1610215166055,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"i3p9fx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/amit/Documents/PubLab/src/index.js",[],["54","55"],"/home/amit/Documents/PubLab/src/App.js",[],"/home/amit/Documents/PubLab/src/reportWebVitals.js",[],"/home/amit/Documents/PubLab/src/components/AddPatient.js",[],"/home/amit/Documents/PubLab/src/components/Login.js",["56","57","58","59"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport firebase from \"../firebase/firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n  const history = useHistory();\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [errors, setErrors] = React.useState({});\n\n  \n  const onSubmit = async event => {\n    event.preventDefault();\n\n    let emailNew;\n\n    // Form validation\n    if (!email) {\n      return setErrors({\n        ...errors,\n        email: 'Username or email is required'\n      });\n    } else if (!password) {\n      return setErrors({\n        ...errors,\n        email: '',\n        password: 'Password is required'\n      });\n    }\n\n    setErrors({});\n\n    if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      emailNew = email;\n    } else {\n      emailNew = email + '@pro-optics.com';\n    }\nconsole.log()\n    try {\n      console.log('here', emailNew, password)\n      firebase.auth().signInWithEmailAndPassword(emailNew, password)\n      .then((user) => {\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        // var errorCode = error.code;\n        // var errorMessage = error.message;\n      });\n    } catch (error) {\n      console.log(error);\n      return setErrors({\n        general: 'Incorrect log in details'\n      });\n    }\n  };\n\n  return (\n    <div className=\"Login\">\n      <div className=\"center mt-5\">\n        <h4>Login as a Super admin</h4>\n      </div>\n      <Form onSubmit={onSubmit} className=\"mt-5 p-4\">\n        <Form.Group size=\"lg\" controlId=\"email\">\n          <Form.Label className=\"font-weight-bold\">Email Address*</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email address\"\n            error={errors.email || errors.general}\n                errorMessage={errors.email}\n                autoFocus={true}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label className=\"font-weight-bold\">Password*</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Enter password\"\n            error={errors.password || errors.general}\n                errorMessage={errors.password || errors.general}\n          />\n        </Form.Group>\n        {/* <a href=\"#\" className=\" float-right text-primary stretched-link mb-4\">Forgot Password?</a> */}\n        <Button className=\"mt-5\" block size=\"lg\" type=\"submit\">\n          Continue\n        </Button>\n      </Form>\n      <div className=\"center p-4\">\n        By continue you agree to\n        <a href=\"\">Terms of User</a>  and \n         <a href=\"\"> Privacy Policy</a>  \n      </div>\n    </div>\n  );\n}","/home/amit/Documents/PubLab/src/components/PatientInex.js",[],"/home/amit/Documents/PubLab/src/components/SelectUser.js",["60","61"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport logo from '../logo.svg';\nimport { Card } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SelectUser() {\n  const history = useHistory();\n\n  function handleClick() {\n    history.push(\"/login\");\n  }\n\n  return (\n    <div className=\"center electUser bg-primary\">\n      <div className=\"center mt-5 mb-5\">\n        <img src={logo} alt=\"Logo\" width=\"150\"/>\n      </div>\n      <div className=\"bt-box bg-white mt-5\">\n        <div className=\"pd-30 navy\">\n          <h4>Login your account as a</h4>\n        </div>\n        <div className=\"parentCard desk-view\">\n          <Card className=\"m-3 round-border\">\n            <Card.Body>\n              <Card.Title className=\"navy\">Super admin</Card.Title>\n              <Card.Text className=\"nav-link fw-6 grey fs-13\">\n                Select your role to login as a Super admin.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          <Card className=\"m-3 round-border\">\n            <Card.Body>\n              <Card.Title className=\"navy\">Data logger</Card.Title>\n              <Card.Text className=\"nav-link fw-6 grey fs-13\">\n                Select your role to login as a Data logger.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n\n          <Button className=\"mt-5\" block size=\"lg\" type=\"submit\" onClick={()=>{handleClick()}}>\n            Next\n        </Button>\n          <br/>\n        </div>\n      </div>\n      \n    </div>\n  );\n}","/home/amit/Documents/PubLab/src/view/PatientCard.jsx",["62"],"import Button from \"react-bootstrap/Button\";\nimport { Card, Form } from \"react-bootstrap\";\n\nconst PatientCard = (props) => {\n  return (\n    <div className=\"patientCard desk-view\">\n      <Card className=\"mt-1\">\n        <Card.Body>\n          <div className=\"card-head-title navy\">\n            <span>\n              <b>Vaibhav Bhagare</b>\n            </span>\n            <span className=\"date float-right\">11 june 2121</span>\n          </div>\n          <div className=\"card-phone navy pt-2 pb-2\">\n            <span className=\"phone\">+91 98989888998 | vb@gmail.com</span>\n          </div>\n          <div className=\"card-head-title\">\n            <Card className=\"pd-unset sm-card bg-danger\">\n              <Card.Body className=\"pd-unset sm-card-body\">\n                <div className=\"sm-text-2\">\n                  <span>Test Result</span>\n                  <span className=\"float-right\">18 Dec 2020 | 06:30 pm</span>\n                </div>\n                <h5 className=\"sm-text-1\">The Covid-19 test is positive</h5>\n              </Card.Body>\n            </Card>\n          </div>\n          <div className=\"card-btn-title pt-3\">\n            <div className=\"btn-group mr-2\" role=\"group\" aria-label=\"Second group\">\n              <button type=\"button\" className=\"btn btn-light fw-5 sm-send-btn\">Send SMS</button>\n            </div>\n            <div className=\"btn-group mr-2 float-right\" role=\"group\" aria-label=\"Second group\">\n              <button type=\"button\" className=\"btn btn-primary fw-5\">Send Email</button>\n            </div>\n            <Form.Check className=\"sm-checkbox mt-3\" type=\"checkbox\" label=\"SMS or Email send request is successful\" />\n          </div>\n        </Card.Body>\n      </Card>\n\n      <Card className=\"mt-1\">\n        <Card.Body>\n          <div className=\"card-head-title navy\">\n            <span>\n              <b>Vaibhav Bhagare</b>\n            </span>\n            <span className=\"date float-right\">11 june 2121</span>\n          </div>\n          <div className=\"card-phone navy pt-2 pb-2\">\n            <span className=\"phone\">+91 98989888998 | vb@gmail.com</span>\n          </div>\n          <div className=\"card-head-title\">\n            <Card className=\"pd-unset sm-card bg-success\">\n              <Card.Body className=\"pd-unset sm-card-body\">\n                <div className=\"sm-text-2\">\n                  <span>Test Result</span>\n                  <span className=\"float-right\">18 Dec 2020 | 06:30 pm</span>\n                </div>\n                <h5 className=\"sm-text-1\">The Covid-19 test is positive</h5>\n              </Card.Body>\n            </Card>\n          </div>\n          <div className=\"card-btn-title pt-3\">\n            <div className=\"btn-group mr-2\" role=\"group\" aria-label=\"Second group\">\n              <button type=\"button\" className=\"btn btn-light fw-5 sm-send-btn\">Send SMS</button>\n            </div>\n            <div className=\"btn-group mr-2 float-right\" role=\"group\" aria-label=\"Second group\">\n              <button type=\"button\" className=\"btn btn-primary fw-5\">Send Email</button>\n            </div>\n            <Form.Check className=\"sm-checkbox mt-3\" type=\"checkbox\" label=\"SMS or Email send request is successful\" />\n          </div>\n        </Card.Body>\n      </Card>\n\n    </div>\n  );\n}\n\nexport default PatientCard;","/home/amit/Documents/PubLab/src/firebase/firebase.js",[],"/home/amit/Documents/PubLab/src/config/config.js",[],"/home/amit/Documents/PubLab/src/firebase/context.js",[],"/home/amit/Documents/PubLab/src/components/AddUser.js",["63","64","65","66","67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":76,"column":17,"nodeType":"79","endLine":76,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":97,"column":9,"nodeType":"82","endLine":97,"endColumn":20},{"ruleId":"80","severity":1,"message":"81","line":98,"column":10,"nodeType":"82","endLine":98,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"83","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":12},{"ruleId":"73","severity":1,"message":"84","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"85","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":23},{"ruleId":"73","severity":1,"message":"86","line":19,"column":18,"nodeType":"75","messageId":"76","endLine":19,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":117,"column":17,"nodeType":"79","endLine":117,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":130,"column":17,"nodeType":"79","endLine":130,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":143,"column":17,"nodeType":"79","endLine":143,"endColumn":33},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form' is defined but never used.","'Button' is defined but never used.","'FirebaseContext' is defined but never used.","'setErrors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]